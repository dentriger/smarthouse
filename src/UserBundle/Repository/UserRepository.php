<?php

namespace UserBundle\Repository;

use UserBundle\Entity\User;
use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function saveUser(User $user)
    {
        $this->_em->persist($user);
        $this->_em->flush();
        return $user;
    }

    public function removeUser($user)
    {
        $this->_em->remove($user);
        $this->_em->flush();
    }

    public function getByPage($page, $per_page, $ordered_by, $direction, $filtered_by, $column)
    {
        if ($filtered_by !== 'all') {
            $products = $this->_em
                ->createQueryBuilder()
                ->select('p')
                ->from('UserBundle:User', 'p')
                ->orderBy('p.' . $ordered_by, $direction)
                ->where('p.' . $filtered_by . '= :column')->setParameter(":column", $column)
                ->setFirstResult(($page - 1) * $per_page)
                ->setMaxResults($per_page)
                ->getQuery()
                ->getResult();
        }else {
            $products = $this->_em
                ->createQueryBuilder()
                ->select('p')
                ->from('UserBundle:User', 'p')
                ->orderBy('p.' . $ordered_by, $direction)
                ->setFirstResult(($page - 1) * $per_page)
                ->setMaxResults($per_page)
                ->getQuery()
                ->getResult();
        }

        return $products;
    }

    public function getCount($filtered_by, $column)
    {
        if ($filtered_by !== 'all') {
            $result = $this->_em
                ->createQueryBuilder()
                ->select('COUNT(p)')
                ->from('UserBundle:User', 'p')
                ->where('p.' . $filtered_by . '= :column')->setParameter(":column", $column)
                ->getQuery()
                ->getSingleScalarResult();
        }else{
            $result = $this->_em
                ->createQueryBuilder()
                ->select('COUNT(p)')
                ->from('UserBundle:User', 'p')
                ->getQuery()
                ->getSingleScalarResult();
        }
        return $result;
    }
}
